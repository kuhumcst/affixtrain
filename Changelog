Version 3.18 - 2015.09.07
-------------------------
Added several some more vectors to try. Serbian, Macedonian, Farsi.

Version 3.17 - 2015.09.08
-------------------------
Added vectors for Portuguese. Set minimum number of lines to start
determination of "best" parameters with at 50000 (up from 20000).

Version 3.16 - 2015.09.07
-------------------------
Added several some more vectors to try.

Version 3.15 - 2015.09.04
-------------------------
Added some more vectors to try. Greek and Romanian.

Version 3.14 - 2015.09.03
-------------------------
Added some more vectors to try. Added metadata to those vectors that
can later be used for visualisation and evaluation.

Version 3.13 - 2015.09.02
-------------------------
Set delta to distance between the most outlying parameter vector and its
closest neighbour. Added two parameter lines for Dutch and Hungarian
both with -XS. (Which gave remarkably small counts of rules.)

Version 3.12 - 2015.09.01
-------------------------
Option -XS: penalty increases with the number of characters (including
wildcards) in the pattern.


Version 3.11 - 2015.09.01
-------------------------
Fixed bug having to do with reading training data in DOS format (CR LF line
endings) under Linux.

Version 3.10 - 2015.08.31
-------------------------
Show 10 decimal digits of training parameters (-D option). (Previously 6)
Ignore CR in input.
Replaced tab by four spaces in source code.
Use Unicode.txt 09-Feb-2015 20:08 and CaseFolding-8.0.0.txt (11-Feb-2015 12:34)

Version 3.09 - 2015.08.26
-------------------------
Changes to approximation algorithm for finding optimal penalty parameters:
1) Use ziggurat method to compute normal distribution for delta vector
   coordinates.
2) Recompute minimal fraction by setting minumum number of examples to 10000
   or 1% of available training examples, whichever is largest, arbitrarily
   regarding less as not representative.
3) An array of good parameter sets that are returned during the first calls to
   brown(), so the algorithm doesn't have to search a too big parameter space.
4) Setting default parameters to 0.0;-0.7;0.7;-0.1;0.1;0.0

Version 3.08 - 2015.08.21
-------------------------
Fixed correct marking of ambiguous examples.

Version 3.07 - 2015.08.21
-------------------------
Fixed option -b, which was broken due to previous changes.

Version 3.06 - 2015.08.20
-------------------------
Removed "whereof used for training <number>" in report + other improvements.
Reinserted functionality that marks control answer as ambiguous (one out of
multiple correct answers). 

Version 3.05 - 2015.08.19
-------------------------
Undid last changes. Solved problem bu cutting path part off before
constructing file names.

Version 3.04 - 2015.08.19
-------------------------
Generated parameter file is named with ".parms" suffix. Before, the name
had "parms." prefix. Same for flexrules: ".flexrules" suffix instead of
"flexrules." prefix.

Version 3.03 - 2015.08.17
-------------------------
When testing with clumped test data (i.e. homographs and/or unrelated words
with same looking lemma combined in clusters, using empty lines between
clusters) lines that have same full form and same lemma (but e.g.,
different word classes) are reduced to a single line. (Only full form and
lemma are taken into account when testting.) This reduction already happened
in previous versions for unclustered test data. This change can have some
influence on the evaluation, because duplicates often are 'easy' cases,
so the reported precision is expected to be somewhat lower than previously.

Version 3.00 - 2015.08.13
-------------------------
Improved user interface, fewer files in temporary directory. Defaults
for some options changed. You need only provide a single option,
-i <full-form/lemma file>, whereafter affixtrain computes optimal
parameters for reducing the size of a trained tree (locally) maximally
for the provided training data. Then affixtrain validates the results
both with OOV and vocabulary words. Finally affixtrain produces
flexrule files using all training data.
In a separate run, using option -b, a flexrule file can be pretty printed
and converted to a Bracmat file (another text format). Optionally a list
of words can be lemmatised.
There is still some dead wood removal and code rationalizing to do.

Version 2.28 - 2015.08.06
-------------------------
"Zero-length" lemmas are excluded from proposed list of possible lemmas.  

Version 2.26 - 2015.07.16
-------------------------
Started changelog.
Current state of affixtrain:
1. Testing with training data gives zero incorrectly lemmatized words. This is
   as at always should have been, but it wasn't 100% the case until now.
2. Unlimited ambiguity is allowed. The first versions of affixtrain could
   handle at most two lemmas per word form. After introducing a new flexrule
   file format, this limitation is gone.
3. When running affixtrain, a parameter file is created that documents what
   was done. Any test results are added at the end. These results can help
   decide which pruning threshold (also called cutoff) is optimal for
   lemmatization of OOV words. (You probably want to use the optional
   dictionary if you choose to use pruned flexrules.)
